#
# Analyze.java
#
defaultInputLabels= a,b,c,d,e,f,g,h
defaultOutputLabels= x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCircularError= Referência circular detectada; tabela-verdade será calculada no lugar.
analyzeConflictError= Saídas conflitantes detectada; tabela-verdade será computada em seu lugar.
analyzeCannotHandleError= Computação da tabela-verdade em lugar da expressão devido a %s.
#
# circuit/Circuit.java
#
circuitName= Nome do circuito
circuitLabelLocAttr= Posição do rótulo
circuitLabelAttr= Rótulo compartilhado
circuitLabelDirAttr= Direção do rótulo compartilhado 
circuitLabelFontAttr= Fonte do rótulo compartilhado
#
# circuit/CircuitMutation.java
#
unknownChangeAction= Alterar circuito
#
# circuit/Subcircuit.java
#
subcircuitViewItem= Ver %s
subcircuitCircuitTip= %s subcircuito
#
# circuit/RadixOption.java
#
radixAttr= Base
radix2= Binário
radix10Signed= Decimal com sinal
radix10Unsigned= Decimal sem sinal
radix8= Octal
radix16= Hexadecimal
#
# circuit/SplitterClass.java
#
# splitter component name
splitterComponent= Distribuidor
# splitter end tool tips
splitterCombinedTip= Extremidade combinada do distribuidor
splitterSplit0Tip= Nenhum bit oriundo da extremidade combinada
splitterSplit1Tip= Bit %s oriundo da extremidade combinada
splitterSplitManyTip= Bits %s oriundos da extremidade combinada
# splitter attributes
splitterBitWidthAttr= Largura em bits à entrada
splitterFanOutAttr= Largura em bits à saída
splitterBitAttr= Bit %s
splitterBitNone= Nenhum
splitterAppearanceAttr = Forma
splitterAppearanceLines = Linhas
splitterAppearanceTrapezoid = Trapezoidal
splitterAppearanceFatTrapezoid = Trapezoidal achatada
#
# circuit/WireClass.java
#
wireComponent= Conexão
wireLengthAttr= Comprimento
wireDirectionAttr= Direção
wireDirectionHorzOption= Horizontal
wireDirectionVertOption= Vertical

# circuit/appear/AppearanceOrigin
circuitAnchor= Âncora
appearanceFacingAttr= Direção da forma

# circuit/appear/AppearancePort
circuitPort= Porta